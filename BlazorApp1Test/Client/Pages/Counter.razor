@page "/counter"
@using System.Globalization

@using BlazorApp1Test.Shared
@using Microsoft.AspNetCore.SignalR.Client

@inject NavigationManager NavigationManager
@inject HttpClient Http

<h1>Radzen Blazor Chart with line series</h1>
<div class="row">
    <div class="col-md-6 col-sm-12 p-4">
        <RadzenChart>
            <RadzenLineSeries Data="@gForceParameters" CategoryProperty="TimeRecorded" Title="X" LineType="LineType.Dashed" ValueProperty="AccelX">
                <RadzenMarkers MarkerType="MarkerType.Square" />
            </RadzenLineSeries>
            <RadzenCategoryAxis Padding="20" FormatString="{0:t}" />
            <RadzenValueAxis>
                <RadzenGridLines Visible="false" />
                <RadzenAxisTitle Text="X - G Force" />
            </RadzenValueAxis>
        </RadzenChart>
    </div>
</div>


@code {
        GForceParameter[] gForceParameters;
        AttitudeParameter[] attitudeParameters;
    private HubConnection hubConnection;


    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder().WithUrl(NavigationManager.ToAbsoluteUri("/flightDataHub")).Build();

        hubConnection.On("ReceiveMessage", () =>
        {
            CallLoadData();
            StateHasChanged();
        });

        await hubConnection.StartAsync();

        await LoadData();
    }

    private void CallLoadData()
    {
        Task.Run(async () =>
        {
            await LoadData();
        });
    }

    protected async Task LoadData()
    {
        gForceParameters = await Http.GetFromJsonAsync<GForceParameter[]>("api/GForceParameters");
        attitudeParameters = await Http.GetFromJsonAsync<AttitudeParameter[]>("api/AttitudeParameters");


        StateHasChanged();

    }

    public bool IsConnected => hubConnection.State == HubConnectionState.Connected;

    public void Dispose()
    {
        _ = hubConnection.DisposeAsync();
    }

    Task SendMessage() => hubConnection.SendAsync("SendMessage");

    protected async Task DeleteData(int id)
    {
        await Http.DeleteAsync("api/GForceParameters/" + id);
        if (IsConnected) await SendMessage();
        StateHasChanged();
        //NavigationManager.NavigateTo("listbooks");
    }
}